#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <cstring>

using namespace std;

string whitespace(string x){ //whitespaceleri siliyo sağdan ve soldan çok gerekcek diye methoda geçirdim
    while(x[0]==' '){  //bastaki boslukları sil
        x=x.substr(1);
    }
    while(x[x.size()-1]==' '){  //sondaki boslukları sil
        x=x.substr(0,x.size()-1);
    }
    return x;
}

void operation(string x1,string x2, string op,int& tempno,vector<string> var){ // tempnoyu kontrol etmeliyiz yanlış oldu heralde
        bool xb=false;                                                         //outfile yapamadım ondan cout suan
        bool xi=false;
        int ini=tempno;
        if(count(var.begin(),var.end(),x1)){ //eğer vectorde varsa int değil demektir başında % olacak
            cout<<"%t"<<ini<<" = load i32* %"<<x1<<endl;
            xb=true;
            ini++;
        }
        if(count(var.begin(),var.end(),x2)){
            cout<<"%t"<<ini<<" = load i32* %"<<x2<<endl;
            xi=true;
            ini++;
        }

        cout<<"%t"<<ini<<" = "<< op <<" i32 ";
        if(xi==true){  //bunların hepsi int ise % yazmaması gerektiği için yazıldı
            cout<<"%t"<<tempno<<", ";  //çok uzun saçma bi kod oldu ben mal mıyım :(
            tempno++;
        }else{
            cout<<x2<<", ";
        }
        if(xb==true){
            cout<<"%t"<<tempno<<endl;
        }else{
            cout<<x1<<endl;
        }

}

int main(int argc, char* argv[]) {

    string infileName=argv[1];
    string outfileName=argv[2];

    ifstream infile;
    ofstream outfile;

    infile.open(infileName);
    outfile.open(outfileName);

    vector<string> vars; //variable'lar bu vectorde hep
    bool syntaxError=false;
    int tmpCount=0;

    outfile << "; ModuleID = 'mylang2ir'\n"
               "declare i32 @printf(i8*, ...)\n"
               "@print.str = constant [4 x i8] c\"%d\\0A\\00\"" << endl << endl;
    outfile<<"define i32 @main() {"<<endl;

    string line;

    while(getline(infile,line)){

        int found=line.find("=");
        if(found != string::npos){
            string s=line.substr(0,found);
            s=whitespace(s);
            if(s.find(" ")!=-1 || s.length()==0){  //namede bosluk varsa veya name yoksa error
                cout<<"ERROR"<<endl;
                continue;
            }else{

                if(!count(vars.begin(), vars.end(), s)){ //variable vectorde yoksa vektore ekleyip allocate ediyoz
                    vars.push_back(s);
                    outfile << "%" << s <<" = alloca i32" << endl;

                }

            }



        }

    }

    outfile << endl;

    for(int i=0;i<vars.size();i++){
        outfile << "store i32 0, i32* %" << vars[i] << endl;
    }

    outfile << endl;

    infile.clear(); //burda file'ı okuduk bitti tekrar başlamak istiyoz o yüzden bu satırları yazmam gerekti
    infile.seekg(0, infile.beg);

    //BISMILLAHIRRAHMANIRRAHIM ALLAH CC HELP US IF YOU EXIST
    //dunyanın en basıc kodunu gormeye hazır ol <3
    while(getline(infile,line)){
        int found=line.find("=");
        bool a=true;
        if(found!=string::npos){ //ASSIGNMENT STATEMENT
            string sag=line.substr(found+1); //assignmentin sag kısmı
            string sol=line.substr(0,found); //assignmentın sol kısmı

            sag=whitespace(sag);
            sol=whitespace(sol);

            if(sol.find(" ")!=-1 || sol.length()==0 || sag.length()==0 ){ // hiçbişey yazmıyosa veya boşluk varsa error
                syntaxError=true;
                cout << "ERROR";
                continue;
            }

            if(sag.find("+")==-1 &&sag.find("-")==-1&&sag.find("*")==-1&&sag.find("/")==-1){ //toplama vs yoksa
                if(sag.find(" ")!=-1){ //islem yoksa sag tarafta sadece bi sey vardir. sondaki ve bastaki boslukları sildiğimiz için bosluk varsa error
                    syntaxError=true;
                    cout << "ERROR";
                    continue;
                }

                for(int i=0; i<sag.length();i++){
                    if(sag.at(i)<48 || sag.at(i)>57 ){ // [0-9] değilse çıkıyo (ascii tablo şeyi)
                        a=false;
                        break;
                    }
                }
                if(a==true){ //[0-9] ve toplama vs yok
                    outfile<<"store i32 "<<sag<<", i32* %"<<sol<<endl;
                }
            }
            //ASIL KABUS BURADA BASLIYOR :(((



        }







        if(line.find("while")!=-1){ //while

        }

    }




    return 0;
}
